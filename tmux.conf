# change prefix (leader key) from C-b to C-a
unbind C-b 
set -g prefix C-a  

# Use r to reload tmux configuration
unbind r
bind r source-file ~/.tmux.conf

# Automatically set window title
#set-window-option -g automatic-rename on
#set-option -g set-titles on

# enable mouse scroll
setw -g mouse on

# 256 colours
# set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",*256*:Tc"

# To enable cursor style switching in nvim insert mode and normal mode
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q',w
 
# start window indexing and pane indexing from 1 (not 0)
set -g base-index 1
set -g pane-base-index 1

# allow utf8 support
setw -gq utf8 on

# Pane colours
# set inactive/active window styles
#set -g window-style 'fg=colour247,bg=colour234'
#set -g window-active-style 'fg=colour255,bg=black'
 
# Resizing panes using prefix+left, prefix+right, prefix+up, prefix+down
bind -r j resize-pane -D 2
bind -r k resize-pane -U 2
bind -r h resize-pane -L 2
bind -r l resize-pane -R 2

# Use Shift+Left and Shift+Right to move between windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Use Ctrl+Shift+Left and Ctrl+Shift+Right to swap window positions in status line
# bind -n C-S-Left { swap-window -t -1; previous-window }
# bind -n C-S-Right { swap-window -t +1; next-window }
bind -n M-< { swap-window -t -1; previous-window }
bind -n M-> { swap-window -t +1; next-window }

# Create new window with n
# Split panes using | and -
unbind '"'
unbind %
bind n new-window -c "#{pane_current_path}"
bind '-' split-window -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"

# set default shell
set -g default-shell /bin/zsh

set -g history-limit 5000

set -sg escape-time 1

# ******************* from github (geohot) **************
# Set status line
set -g status-position bottom
set -g status-bg colour234
set -g status-fg white
set -g status-left ' '
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m/%y #[fg=colour233,bg=colour245,bold] %H:%M '
set -g status-right-length 50
set -g status-left-length 100
setw -g window-status-current-format '#[bg=colour238] #I#[fg=colour250]#[bg=colour238]:#[fg=colour255]#[bg=colour238]#W#[fg=colour50]#F '
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W ' 

# Enable vim-style copy mode
setw -g mode-keys vi
set -g @yank_action 'copy-pipe-and-cancel'

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi / command-prompt -i -p "(search down)" "send -X search-forward-incremental \"%%%\""
bind -T copy-mode-vi ? command-prompt -i -p "(search up)" "send -X search-backward-incremental \"%%%\""

bind -T copy-mode    DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-and-cancel "xclip -selection c"
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-and-cancel "xclip -selection c"
bind -n DoubleClick1Pane select-pane \; copy-mode -M \; send -X select-word \; send -X copy-pipe-and-cancel "xclip -selection c"
bind -T copy-mode    TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-and-cancel "xclip -selection c"
bind -T copy-mode-vi TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-and-cancel "xclip -selection c"
bind -n TripleClick1Pane select-pane \; copy-mode -M \; send -X select-line \; send -X copy-pipe-and-cancel "xclip -selection c"

# Install tmp (if not installed)
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# List of tmux plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

